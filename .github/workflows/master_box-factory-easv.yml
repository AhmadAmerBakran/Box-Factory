# Combined GitHub Actions Workflow
name: Build, Test, and Deploy to Azure

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env: 
      pgconn: ${{ secrets.PGCONN }}

    steps:
      # Step 0: Setup Node.js for Angular
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
          
      # Step 0.1: Install Angular CLI
      - name: Install Angular CLI
        run: npm install -g @angular/cli
        
      # Step 1: Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      # Step 2: Checkout the current repository
      - name: Checkout code
        uses: actions/checkout@v4
          
      # Step 3: Install Angular dependencies
      - name: Install Angular dependencies
        run: |
            cd frontend/BoxFactoryFrontend
            npm install
            ng build
          
      # Step 4: Install API Nuget Packages
      - name: Install API Nuget Packages
        run: |
          cd api
          dotnet restore
          
      # Step 4.5: Install Playwright Browsers
      - name: Install Playwright Browsers
        run: npx playwright install
      
      # Step 5: Start your API
      - name: Start API
        run: |
          cd api
          dotnet run &
          
      # Step 6: Sleep to allow time for the API to start
      - name: Sleep for 60 seconds
        run: sleep 60s
      
      # Step 7: Run tests
      - name: Run Tests
        run: |
          cd BoxFactoryTest
          dotnet test BoxFactoryTest.csproj
          
      # Step 8: Publish .NET App
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
      
      # Step 9: Upload artifact for deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test  # This ensures deploy only happens if build-and-test succeeds
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Azure's steps
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'box-factory-easv'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DF82D57A9AE548BD98AD63DB632FA346 }}
          package: .
